name: wheels

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PYTHON_INSTALL: '3.9'
  PYTHON_INSTALL_PEP_425: 'cp39-cp39'
  PYTHON_TARGETS: "python3.9 python3.8 python3.7"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    buildmanylinux:
      strategy:
        fail-fast: false
      runs-on: ubuntu-latest
      steps:
      - name: Checkout action
        uses: actions/checkout@v2
        with:
          repository: tmtenbrink/python-wheels-manylinux-build
      - name: Checkout rustfrc
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_INSTALL }}
      - name: Build manylinux Python wheels
        uses: './'
        with:
          python-install: ${{ env.PYTHON_INSTALL }}
          python-targets: ${{ env.PYTHON_TARGETS }}
          package-path: ${{ github.repository }}
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ${{ github.repository }}/dist

    buildmac:
      # The type of runner that the job will run on
      runs-on: macos-11
      strategy:
        matrix:
          target: ['--universal2', '']
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - uses: actions/setup-python@v2
          with:
            python-version: ${{ env.PYTHON_INSTALL }}

        - name: Rustup install aarch64 target
          run: rustup target add aarch64-apple-darwin

        # Runs a single command using the runners shell
        - name: Poetry
          run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -

        - name: Add poetry path
          run: echo "$HOME/.local/bin" >> $GITHUB_PATH

        - name: HOME test
          run: echo "$PATH"

        - name: Poetry update
          run: poetry update
          working-directory: ${{ github.workspace }}

        - name: Install delocate
          run: pip install delocate
          working-directory: ${{ github.workspace }}

        - name: maturin build release 
          run: poetry run maturin build --release ${{ matrix.target }} -i ${{ env.PYTHON_TARGETS }}
          working-directory: ${{ github.workspace }}

        - name: delocate fix wheels
          run: find . -name "*.whl" -exec delocate-wheel -w wheelhouse --require-archs=universal2 {} \;
          working-directory: ${{ github.workspace }}

        - uses: actions/upload-artifact@v2
          with:
            name: wheels
            path: ${{ github.workspace }}/wheelhouse

    buildwindows:
        # The type of runner that the job will run on
        runs-on: windows-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - uses: actions/checkout@v2
          - uses: actions/setup-python@v2
            with:
              python-version: ${{ env.PYTHON_INSTALL }}

          # Runs a single command using the runners shell
          - name: Poetry
            run: (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -UseBasicParsing).Content | python -

          - name: Poetry path
            run: echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
          - name: Poetry update
            run: |
              echo The value of ^%AppData^% is %AppData%
              echo $Env:Path
              poetry update
            working-directory: ${{ github.workspace }}

          - name: maturin build release 
            run: poetry run maturin build --release -i ${{ env.PYTHON_TARGETS }}
            working-directory: ${{ github.workspace }}

          - uses: actions/upload-artifact@v2
            with:
              name: wheels
              path: ${{ github.workspace }}/target/wheels
